{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport swal from 'sweetalert';\nimport axios from 'axios';\n\nconst UserAPI = token => {\n  _s();\n\n  const [isLogged, setIsLogged] = useState(false);\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [cart, setCart] = useState([]);\n  const [history, setHistory] = useState([]);\n  useEffect(() => {\n    if (token) {\n      const getUser = async () => {\n        try {\n          const res = await axios.get('/user/infor', {\n            headers: {\n              Authorization: token\n            }\n          });\n          setIsLogged(true);\n          res.data.role === 1 ? setIsAdmin(true) : setIsAdmin(false);\n          setCart(res.data.cart);\n        } catch (err) {\n          swal({\n            title: \"Error\",\n            text: err.response.data.msg,\n            icon: \"error\",\n            button: \"OK\"\n          });\n        }\n      };\n\n      getUser();\n    }\n  }, [token]);\n  useEffect(() => {\n    if (token) {\n      cont;\n    }\n  }, []);\n\n  const addCart = async product => {\n    if (!isLogged) return swal(\"Fail!\", \"Please login to continue buying\", \"error\");\n    const check = cart.every(item => {\n      return item._id !== product._id;\n    });\n\n    if (check) {\n      setCart([...cart, { ...product,\n        quantity: 1\n      }]);\n      await axios.patch('/user/addtocart', {\n        cart: [...cart, { ...product,\n          quantity: 1\n        }]\n      }, {\n        headers: {\n          Authorization: token\n        }\n      });\n    } else {\n      swal(\"Thank you!\", \"This product has been added to cart!\", \"info\");\n    }\n  };\n\n  return {\n    isLogged: [isLogged, setIsLogged],\n    isAdmin: [isAdmin, setIsAdmin],\n    cart: [cart, setCart],\n    addCart: addCart\n  };\n};\n\n_s(UserAPI, \"uZ+AyAeE98XuHy0wOObw3zrE0zM=\");\n\n_c = UserAPI;\nexport default UserAPI;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserAPI\");","map":{"version":3,"sources":["C:/Users/ASUS/Documents/React/MERN-E/client/src/api/UserAPI.js"],"names":["useState","useEffect","swal","axios","UserAPI","token","isLogged","setIsLogged","isAdmin","setIsAdmin","cart","setCart","history","setHistory","getUser","res","get","headers","Authorization","data","role","err","title","text","response","msg","icon","button","cont","addCart","product","check","every","item","_id","quantity","patch"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\r\nimport swal from 'sweetalert';\r\nimport axios from 'axios';\r\n\r\nconst UserAPI = (token) => {\r\n  const [isLogged, setIsLogged] = useState(false);\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n  const [cart, setCart] = useState([]);\r\n  const [history, setHistory] = useState([])\r\n\r\n  useEffect(() => {\r\n    if (token) {\r\n      const getUser = async () => {\r\n        try {\r\n          const res = await axios.get('/user/infor', {\r\n            headers: {Authorization: token}\r\n          })\r\n          setIsLogged(true)\r\n          res.data.role === 1 ? setIsAdmin(true) : setIsAdmin(false)\r\n          setCart(res.data.cart)\r\n        } catch (err) {\r\n          swal({\r\n            title: \"Error\",\r\n            text: err.response.data.msg,\r\n            icon: \"error\",\r\n            button: \"OK\",\r\n          });\r\n        }\r\n      }\r\n\r\n      getUser()\r\n    }\r\n  }, [token])\r\n\r\n  useEffect(() => {\r\n    if (token) {\r\n      cont\r\n    }\r\n  }, [])\r\n\r\n  const addCart = async (product) => {\r\n    if (!isLogged) return swal(\"Fail!\", \"Please login to continue buying\", \"error\");\r\n\r\n    const check = cart.every(item => {\r\n      return item._id !== product._id\r\n    })\r\n    if (check) {\r\n      setCart([...cart, {...product, quantity: 1}])\r\n      await axios.patch('/user/addtocart', {cart: [...cart, {...product, quantity: 1}]}, {\r\n        headers: {Authorization: token}\r\n      })\r\n    } else {\r\n      swal(\"Thank you!\", \"This product has been added to cart!\", \"info\");\r\n    }\r\n  } \r\n\r\n  return {\r\n    isLogged: [isLogged, setIsLogged],\r\n    isAdmin: [isAdmin, setIsAdmin],\r\n    cart: [cart, setCart],\r\n    addCart: addCart\r\n  }\r\n}\r\n\r\nexport default UserAPI\r\n"]},"metadata":{},"sourceType":"module"}