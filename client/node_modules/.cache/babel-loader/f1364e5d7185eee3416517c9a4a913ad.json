{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport swal from 'sweetalert';\nimport axios from 'axios';\n\nconst UserAPI = token => {\n  _s();\n\n  const [isLogged, setIsLogged] = useState(false);\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [cart, setCart] = useState([]);\n  const [history, setHistory] = useState([]);\n  const [callback, setCallback] = useState(false);\n  const [infor, setInfor] = useState([name]);\n  useEffect(() => {\n    if (token) {\n      const getUser = async () => {\n        try {\n          const res = await axios.get('/user/infor', {\n            headers: {\n              Authorization: token\n            }\n          });\n          setIsLogged(true);\n          res.data.role === 1 ? setIsAdmin(true) : setIsAdmin(false);\n          setCart(res.data.cart);\n          setInfor([res.data.name, res.data.mobile, res.data.address]);\n        } catch (err) {\n          swal(\"Error\", err.response.data.msg, \"error\");\n        }\n      };\n\n      getUser();\n    }\n  }, [token]);\n  useEffect(() => {\n    if (token) {\n      const getHistory = async () => {\n        if (isAdmin) {\n          const res = await axios.get('/api/payment', {\n            headers: {\n              Authorization: token\n            }\n          });\n          setHistory(res.data);\n        } else {\n          const res = await axios.get('/user/history', {\n            headers: {\n              Authorization: token\n            }\n          });\n          setHistory(res.data);\n        }\n      };\n\n      getHistory();\n    }\n  }, [token, callback, isAdmin]);\n\n  const addCart = async product => {\n    if (!isLogged) return swal(\"Fail!\", \"Please login to continue buying\", \"error\");\n    const check = cart.every(item => {\n      return item._id !== product._id;\n    });\n\n    if (check) {\n      setCart([...cart, { ...product,\n        quantity: 1\n      }]);\n      await axios.patch('/user/addcart', {\n        cart: [...cart, { ...product,\n          quantity: 1\n        }]\n      }, {\n        headers: {\n          Authorization: token\n        }\n      });\n    } else {\n      swal(\"Thank you!\", \"This product has been added to cart!\", \"info\");\n    }\n  };\n\n  return {\n    isLogged: [isLogged, setIsLogged],\n    isAdmin: [isAdmin, setIsAdmin],\n    cart: [cart, setCart],\n    addCart: addCart,\n    history: [history, setHistory],\n    callback: [callback, setCallback],\n    infor: [infor, setInfor]\n  };\n};\n\n_s(UserAPI, \"C/QqwOjxtra+Nt2wmEn6o+OeE/I=\");\n\n_c = UserAPI;\nexport default UserAPI;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserAPI\");","map":{"version":3,"sources":["C:/Users/ASUS/Documents/React/MERN-E/client/src/api/UserAPI.js"],"names":["useState","useEffect","swal","axios","UserAPI","token","isLogged","setIsLogged","isAdmin","setIsAdmin","cart","setCart","history","setHistory","callback","setCallback","infor","setInfor","name","getUser","res","get","headers","Authorization","data","role","mobile","address","err","response","msg","getHistory","addCart","product","check","every","item","_id","quantity","patch"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAAA;;AACzB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACU,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACY,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACc,QAAD,EAAWC,WAAX,IAA0Bf,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACgB,KAAD,EAAQC,QAAR,IAAoBjB,QAAQ,CAAC,CAACkB,IAAD,CAAD,CAAlC;AAEAjB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAII,KAAJ,EAAW;AACT,YAAMc,OAAO,GAAG,YAAY;AAC1B,YAAI;AACF,gBAAMC,GAAG,GAAG,MAAMjB,KAAK,CAACkB,GAAN,CAAU,aAAV,EAAyB;AACzCC,YAAAA,OAAO,EAAE;AAACC,cAAAA,aAAa,EAAElB;AAAhB;AADgC,WAAzB,CAAlB;AAGAE,UAAAA,WAAW,CAAC,IAAD,CAAX;AACAa,UAAAA,GAAG,CAACI,IAAJ,CAASC,IAAT,KAAkB,CAAlB,GAAsBhB,UAAU,CAAC,IAAD,CAAhC,GAAyCA,UAAU,CAAC,KAAD,CAAnD;AACAE,UAAAA,OAAO,CAACS,GAAG,CAACI,IAAJ,CAASd,IAAV,CAAP;AACAO,UAAAA,QAAQ,CAAC,CAACG,GAAG,CAACI,IAAJ,CAASN,IAAV,EAAgBE,GAAG,CAACI,IAAJ,CAASE,MAAzB,EAAiCN,GAAG,CAACI,IAAJ,CAASG,OAA1C,CAAD,CAAR;AACD,SARD,CAQE,OAAOC,GAAP,EAAY;AACZ1B,UAAAA,IAAI,CAAC,OAAD,EAAU0B,GAAG,CAACC,QAAJ,CAAaL,IAAb,CAAkBM,GAA5B,EAAiC,OAAjC,CAAJ;AACD;AACF,OAZD;;AAcAX,MAAAA,OAAO;AACR;AACF,GAlBQ,EAkBN,CAACd,KAAD,CAlBM,CAAT;AAoBAJ,EAAAA,SAAS,CAAC,MAAM;AACd,QAAII,KAAJ,EAAW;AACT,YAAM0B,UAAU,GAAG,YAAY;AAC7B,YAAIvB,OAAJ,EAAa;AACX,gBAAMY,GAAG,GAAG,MAAMjB,KAAK,CAACkB,GAAN,CAAU,cAAV,EAA0B;AAC1CC,YAAAA,OAAO,EAAE;AAACC,cAAAA,aAAa,EAAElB;AAAhB;AADiC,WAA1B,CAAlB;AAGAQ,UAAAA,UAAU,CAACO,GAAG,CAACI,IAAL,CAAV;AACD,SALD,MAKO;AACL,gBAAMJ,GAAG,GAAG,MAAMjB,KAAK,CAACkB,GAAN,CAAU,eAAV,EAA2B;AAC3CC,YAAAA,OAAO,EAAE;AAACC,cAAAA,aAAa,EAAElB;AAAhB;AADkC,WAA3B,CAAlB;AAGAQ,UAAAA,UAAU,CAACO,GAAG,CAACI,IAAL,CAAV;AACD;AACF,OAZD;;AAaAO,MAAAA,UAAU;AACX;AACF,GAjBQ,EAiBN,CAAC1B,KAAD,EAAQS,QAAR,EAAkBN,OAAlB,CAjBM,CAAT;;AAmBA,QAAMwB,OAAO,GAAG,MAAOC,OAAP,IAAmB;AACjC,QAAI,CAAC3B,QAAL,EAAe,OAAOJ,IAAI,CAAC,OAAD,EAAU,iCAAV,EAA6C,OAA7C,CAAX;AAEf,UAAMgC,KAAK,GAAGxB,IAAI,CAACyB,KAAL,CAAWC,IAAI,IAAI;AAC/B,aAAOA,IAAI,CAACC,GAAL,KAAaJ,OAAO,CAACI,GAA5B;AACD,KAFa,CAAd;;AAGA,QAAIH,KAAJ,EAAW;AACTvB,MAAAA,OAAO,CAAC,CAAC,GAAGD,IAAJ,EAAU,EAAC,GAAGuB,OAAJ;AAAaK,QAAAA,QAAQ,EAAE;AAAvB,OAAV,CAAD,CAAP;AACA,YAAMnC,KAAK,CAACoC,KAAN,CAAY,eAAZ,EAA6B;AAAC7B,QAAAA,IAAI,EAAE,CAAC,GAAGA,IAAJ,EAAU,EAAC,GAAGuB,OAAJ;AAAaK,UAAAA,QAAQ,EAAE;AAAvB,SAAV;AAAP,OAA7B,EAA2E;AAC/EhB,QAAAA,OAAO,EAAE;AAACC,UAAAA,aAAa,EAAElB;AAAhB;AADsE,OAA3E,CAAN;AAGD,KALD,MAKO;AACLH,MAAAA,IAAI,CAAC,YAAD,EAAe,sCAAf,EAAuD,MAAvD,CAAJ;AACD;AACF,GAdD;;AAgBA,SAAO;AACLI,IAAAA,QAAQ,EAAE,CAACA,QAAD,EAAWC,WAAX,CADL;AAELC,IAAAA,OAAO,EAAE,CAACA,OAAD,EAAUC,UAAV,CAFJ;AAGLC,IAAAA,IAAI,EAAE,CAACA,IAAD,EAAOC,OAAP,CAHD;AAILqB,IAAAA,OAAO,EAAEA,OAJJ;AAKLpB,IAAAA,OAAO,EAAE,CAACA,OAAD,EAAUC,UAAV,CALJ;AAMLC,IAAAA,QAAQ,EAAE,CAACA,QAAD,EAAWC,WAAX,CANL;AAOLC,IAAAA,KAAK,EAAE,CAACA,KAAD,EAAQC,QAAR;AAPF,GAAP;AASD,CAxED;;GAAMb,O;;KAAAA,O;AA0EN,eAAeA,OAAf","sourcesContent":["import { useState, useEffect } from 'react';\r\nimport swal from 'sweetalert';\r\nimport axios from 'axios';\r\n\r\nconst UserAPI = (token) => {\r\n  const [isLogged, setIsLogged] = useState(false);\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n  const [cart, setCart] = useState([]);\r\n  const [history, setHistory] = useState([]);\r\n  const [callback, setCallback] = useState(false);\r\n  const [infor, setInfor] = useState([name, ]);\r\n\r\n  useEffect(() => {\r\n    if (token) {\r\n      const getUser = async () => {\r\n        try {\r\n          const res = await axios.get('/user/infor', {\r\n            headers: {Authorization: token}\r\n          })\r\n          setIsLogged(true)\r\n          res.data.role === 1 ? setIsAdmin(true) : setIsAdmin(false)\r\n          setCart(res.data.cart)\r\n          setInfor([res.data.name, res.data.mobile, res.data.address])\r\n        } catch (err) {\r\n          swal(\"Error\", err.response.data.msg, \"error\")\r\n        }\r\n      }\r\n\r\n      getUser()\r\n    }\r\n  }, [token])\r\n\r\n  useEffect(() => {\r\n    if (token) {\r\n      const getHistory = async () => {\r\n        if (isAdmin) {\r\n          const res = await axios.get('/api/payment', {\r\n            headers: {Authorization: token}\r\n          })\r\n          setHistory(res.data)\r\n        } else {\r\n          const res = await axios.get('/user/history', {\r\n            headers: {Authorization: token}\r\n          })\r\n          setHistory(res.data)\r\n        }\r\n      }\r\n      getHistory()\r\n    }\r\n  }, [token, callback, isAdmin])\r\n\r\n  const addCart = async (product) => {\r\n    if (!isLogged) return swal(\"Fail!\", \"Please login to continue buying\", \"error\");\r\n\r\n    const check = cart.every(item => {\r\n      return item._id !== product._id\r\n    })\r\n    if (check) {\r\n      setCart([...cart, {...product, quantity: 1}])\r\n      await axios.patch('/user/addcart', {cart: [...cart, {...product, quantity: 1}]}, {\r\n        headers: {Authorization: token}\r\n      })\r\n    } else {\r\n      swal(\"Thank you!\", \"This product has been added to cart!\", \"info\");\r\n    }\r\n  } \r\n\r\n  return {\r\n    isLogged: [isLogged, setIsLogged],\r\n    isAdmin: [isAdmin, setIsAdmin],\r\n    cart: [cart, setCart],\r\n    addCart: addCart,\r\n    history: [history, setHistory],\r\n    callback: [callback, setCallback],\r\n    infor: [infor, setInfor]\r\n  }\r\n}\r\n\r\nexport default UserAPI\r\n"]},"metadata":{},"sourceType":"module"}